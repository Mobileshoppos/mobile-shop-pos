-- Create the new table to store dynamic attributes for each category
CREATE TABLE public.category_attributes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(), -- YAHAN TABDEELI KI GAYI HAI
  category_id BIGINT NOT NULL,
  attribute_name TEXT NOT NULL,
  attribute_type TEXT NOT NULL CHECK (attribute_type IN ('text', 'number', 'select')),
  options JSONB NULL, -- To store options for 'select' type, e.g., ["New", "Used"]
  is_required BOOLEAN NOT NULL DEFAULT TRUE,
  CONSTRAINT fk_category
    FOREIGN KEY(category_id) 
    REFERENCES public.categories(id)
    ON DELETE CASCADE -- If a category is deleted, its attributes will also be deleted.
);

-- Add comments to explain what each column does
COMMENT ON TABLE public.category_attributes IS 'Stores dynamic attributes definitions for product categories.';
COMMENT ON COLUMN public.category_attributes.category_id IS 'Links to the category this attribute belongs to.';
COMMENT ON COLUMN public.category_attributes.attribute_name IS 'The display name of the attribute, e.g., "Color", "IMEI", "Storage".';
COMMENT ON COLUMN public.category_attributes.attribute_type IS 'The type of input field, e.g., text, number, select.';
COMMENT ON COLUMN public.category_attributes.options IS 'An array of choices if the type is "select".';
COMMENT ON COLUMN public.category_attributes.is_required IS 'Whether this attribute must be filled out.';